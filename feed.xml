<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>OrdinaryDennis</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2024-10-03T15:22:04+09:00</updated> <author> <name>your_full_name</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2024 your_full_name </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>C++20 Concept</title><link href="/posts/C++-20-Concept/" rel="alternate" type="text/html" title="C++20 Concept" /><published>2024-10-01T00:00:00+09:00</published> <updated>2024-10-03T15:21:29+09:00</updated> <id>/posts/C++-20-Concept/</id> <content src="/posts/C++-20-Concept/" /> <author> <name>{"name"=>"Dennis"}</name> </author> <category term="C++" /> <summary> We often come across template code during development. The standard libraries we frequently use are also mostly developed using templates. However, such template code is often used in ways that differ from the developer’s original intention, and it can be difficult to identify the cause when errors occur. Today, I will explain the Concept introduced in C++20 for the first time and discuss why w... </summary> </entry> <entry><title>LeeCode 82. Remove Duplicates from Sorted List II</title><link href="/posts/LeeCode-82.-Remove-Duplicates-from-Sorted-List-II/" rel="alternate" type="text/html" title="LeeCode 82. Remove Duplicates from Sorted List II" /><published>2024-02-03T00:00:00+09:00</published> <updated>2024-02-03T00:00:00+09:00</updated> <id>/posts/LeeCode-82.-Remove-Duplicates-from-Sorted-List-II/</id> <content src="/posts/LeeCode-82.-Remove-Duplicates-from-Sorted-List-II/" /> <author> <name>{"name"=>"Dennis"}</name> </author> <category term="Algorithm" /> <summary> Discription Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. Return the linked list sorted as well. Example 1: Input: head = [1,2,3,3,4,4,5] Output: [1,2,5] Example 2: Input: head = [1,1,1,2,3] Output: [2,3] Constraints: The number of nodes in the list is in the range (0, 300). -100 &amp;lt;=... </summary> </entry> <entry><title>LeeCode 662. Maximum Width of Binary Tree</title><link href="/posts/LeeCode-662.-Maximum-Width-of-Binary-Tree/" rel="alternate" type="text/html" title="LeeCode 662. Maximum Width of Binary Tree" /><published>2024-01-21T00:00:00+09:00</published> <updated>2024-01-21T00:00:00+09:00</updated> <id>/posts/LeeCode-662.-Maximum-Width-of-Binary-Tree/</id> <content src="/posts/LeeCode-662.-Maximum-Width-of-Binary-Tree/" /> <author> <name>{"name"=>"Dennis"}</name> </author> <category term="Algorithm" /> <summary> Discription Given the root of a binary tree, return the maximum width of the given tree. The maximum width of a tree is the maximum width among all levels. The width of one level is defined as the length between the end-nodes (the leftmost and rightmost non-null nodes), where the null nodes between the end-nodes that would be present in a complete binary tree extending down to that level ar... </summary> </entry> <entry><title>LeeCode 873. Length of Longest Fibonacci Subsequence</title><link href="/posts/LeeCode-873.-Length-of-Longest-Fibonacci-Subsequence/" rel="alternate" type="text/html" title="LeeCode 873. Length of Longest Fibonacci Subsequence" /><published>2023-10-15T00:00:00+09:00</published> <updated>2023-10-15T00:00:00+09:00</updated> <id>/posts/LeeCode-873.-Length-of-Longest-Fibonacci-Subsequence/</id> <content src="/posts/LeeCode-873.-Length-of-Longest-Fibonacci-Subsequence/" /> <author> <name>{"name"=>"Dennis"}</name> </author> <category term="Algorithm" /> <summary> Discription A sequence x1, x2, ..., xn is Fibonacci-like if: n &amp;gt;= 3 xi + xi+1 == xi+2 for all i + 2 &amp;lt;= n Given a strictly increasing array arr of positive integers forming a sequence, return the length of the longest Fibonacci-like subsequence of arr. If one does not exist, return 0. A subsequence is derived from another sequence arr by deleting any number of elements (includin... </summary> </entry> <entry><title>C++ std::tuple</title><link href="/posts/tuple/" rel="alternate" type="text/html" title="C++ std::tuple" /><published>2023-10-09T00:00:00+09:00</published> <updated>2023-10-09T00:00:00+09:00</updated> <id>/posts/tuple/</id> <content src="/posts/tuple/" /> <author> <name>{"name"=>"Dennis"}</name> </author> <category term="C++" /> <summary> When you wanna deal with multiple types, what should you do? There are likely various ways but among them, today, I am going to discuss about std::tuple. Why you use std::tuple Suppose you need to create a function to return system information. int GetSystemInfo() { int systemNum = 1; return systemNum; } Good! However, if you have to return a system name as well, how do you return a sy... </summary> </entry> </feed>
